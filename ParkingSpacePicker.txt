//This project is completely based on image learning process.If a person is moving the parking space is still showing that it is available.So it is not affetcted by person moving 
through the space.So it has to be a big object like a car.So if there is something as big as car so it will detect occupied otherwise it is detecting as available space.As long as the 
camera is not moving this technique works very well.


//Creating a program that will allow us to select and deselect these parking 
spaces.We put them all in a list and then we will take it to our main code.
So one file is for selecting and other one is for running.So once we select 
we are going to save it in a file as well

//This program is for selecting the empty spaces.
import cv2
import pickle  // Package to save all the places or positions of the parking spaces
			and then bring it to our main code 
 
width, height = 107, 48  //Width and height of the rectangle that we have choosen to select the empty and filled space
 
//It will load the fisible position into our code and 
then it will append to our list.Else it wont append to
our list..
 
try:  //We will try to find it in the file
    with open('CarParkPos', 'rb') as f:  Whatever is in file f put it in our list.
        posList = pickle.load(f)
except: //If we dont find it we will create a new empty list
    posList = []
 
 
def mouseClick(events, x, y, flags, params):  //This is the declaration of the mouseClick function.If we are pressing the left button of the mouse we want to append in the list.
    if events == cv2.EVENT_LBUTTONDOWN:		So we will append the position of the empty place i.e, (x,y).
        posList.append((x, y))
    if events == cv2.EVENT_RBUTTONDOWN:     //If our position point or if our click point is in between one of these positions that we already have then we will delete it
        for i, pos in enumerate(posList):	    We are using right button to delete it.
            x1, y1 = pos
            if x1 < x < x1 + width and y1 < y < y1 + height:
                posList.pop(i)
 
    with open('CarParkPos', 'wb') as f: \\It will add to our pickle list.The first parameter is the file name and the next parameter is for read and write.Then it will dump into our
        pickle.dump(posList, f)		file.
 
 
while True:
    img = cv2.imread('carParkImg.png')  //It will read the image again again because the image is static.In the video we will not face this issue because it will generate the frames 
    for pos in posList: 			continuously.
        cv2.rectangle(img, pos, (pos[0] + width, pos[1] + height), (255, 0, 255), 2) //It will create a rectangle of a particular colour(Here it is pink) and it will display on the
    #cv2.rectangle(img,(50,192),(157,240),(255,0,255),2)					  screen but it wont save the place.
    cv2.imshow("Image", img)  //It will show the image
    cv2.setMouseCallback("Image", mouseClick)  //This is to detect the mouseclick
    cv2.waitKey(1)  //This function is for to hold the image for a particular time